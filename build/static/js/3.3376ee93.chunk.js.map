{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","props","useState","status","setStatus","editMode","setEditMode","useEffect","autoFocus","onBlur","updateUserStatus","onChange","event","target","placeholder","className","s","onClick","ProfileInfo","profile","profileInfo","profilePhoto","src","photos","large","userPhoto","alt","descriptionBlock","size","Post","message","likesCount","item","maxLength15","maxLength","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","reduxForm","form","MyPosts","React","memo","profilePage","addPost","posts","postsData","map","id","key","postsBlock","values","postText","MyPostsContainer","connect","state","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","history","setUserProfile","setUserStatusThunk","updateUserStatusThunk","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.3376ee93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3ItUV\",\"profilePhoto\":\"ProfileInfo_profilePhoto__1zFIr\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1JLh1\",\"status\":\"ProfileInfo_status__z0yvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__17qAL\",\"posts\":\"MyPosts_posts__RvDT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3bFxP\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [status, setStatus] = useState(props.status);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const changeStatus = (event) => {\r\n        setStatus(event.target.value)\r\n    }\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateMode = () => {\r\n\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>Статус:\r\n            {!editMode\r\n\r\n                ? <span className={s.status}\r\n                    onClick={activateMode}> {props.status || \"Status will be here\"}</span>\r\n\r\n                : <input autoFocus\r\n                    onBlur={deactivateMode}\r\n                    value={status}\r\n                    onChange={changeStatus}\r\n                    placeholder=\"Status will be here\" />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport { Spin } from 'antd';\r\n\r\nimport userPhoto from '../../../image/ava.jpg';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileInfo = ({ profile, updateUserStatus, status }) => {\r\n\r\n  if (!profile) {\r\n    return <Spin size=\"large\" />\r\n  }\r\n\r\n  return (\r\n    <div className={s.profileInfo}>\r\n      <div className={s.profilePhoto}>\r\n        <img src={profile.photos.large || userPhoto} alt=\"ava\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        description\r\n      </div>\r\n\r\n      <ProfileStatus updateUserStatus={updateUserStatus}\r\n        status={status} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = ({ message, likesCount }) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' alt='фото' />\r\n      {message}\r\n      <div>\r\n        <span>like: {likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLength } from '../../../../utils/validators/validators';\r\n\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst maxLength15 = maxLength(15);\r\n\r\nlet AddNewPostForm = (props) => {\r\n\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='postText'\r\n                    component={Textarea}\r\n                    validate={[required, maxLength15]}\r\n                    placeholder='Type your post' />\r\n            </div>\r\n\r\n            <button>Добавить пост</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddNewPostForm = reduxForm({ form: 'addNewPostForm' })(AddNewPostForm);","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport AddNewPostForm from './AddNewPostForm/AddNewPostForm';\r\n\r\nconst MyPosts = React.memo(({ profilePage, addPost }) => {\r\n\r\n  const { postsData } = profilePage;\r\n\r\n  const posts = postsData.map((item) => {\r\n    const { id, message, likesCount } = item;\r\n\r\n    return <Post key={id} message={message} likesCount={likesCount} />\r\n  });\r\n\r\n  const onAddPost = (values) => {\r\n    addPost(values.postText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n\r\n      <AddNewPostForm onSubmit={onAddPost} />\r\n\r\n      <div className={s.posts}>\r\n        {posts}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n\r\n","import MyPosts from './MyPosts';\r\n\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    profilePage: state.profilePage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    addPost: (postText) => {\r\n      dispatch(addPostActionCreator(postText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = ({ profile, updateUserStatus, status }) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={profile}\r\n        status={status}\r\n        updateUserStatus={updateUserStatus} />\r\n\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { setUserProfile, setUserStatusThunk, updateUserStatusThunk } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.setUserProfile(userId);\r\n        this.props.setUserStatusThunk(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateUserStatus={this.props.updateUserStatusThunk} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        { setUserProfile, setUserStatusThunk, updateUserStatusThunk }),\r\n\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}