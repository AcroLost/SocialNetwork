{"version":3,"sources":["utils/validators/validators.js","components/Navbar/Friends/Friends.module.css","components/Users/Users.module.css","image/ava.jpg","redux/profileReducer.js","api/api.js","redux/dialogsReducer.js","image/logo.png","components/Navbar/Navbar.module.css","components/Navbar/Navbar.js","utils/object-helpers.js","redux/usersReducer.js","components/Users/User.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Header/Header.js","redux/authReducer.js","components/Header/HeaderContainer.js","components/Login/LoginForm/LoginForm.js","components/Login/Login.js","redux/appReducer.js","redux/sidebarReducer.js","redux/reduxStore.js","hoc/withLazySuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css"],"names":["required","value","maxLength","max","length","module","exports","ADD_POST","initialState","postsData","id","message","likesCount","profile","status","addPostActionCreator","postText","type","setUserStatusAC","setUserProfile","userId","dispatch","a","profileAPI","profileUser","res","data","setUserStatusThunk","setUserStatus","updateUserStatusThunk","updateUserStatus","resultCode","savePhotoThunk","file","savePhoto","photos","saveProfileThunk","getState","auth","saveProfile","stopSubmit","_error","messages","Promise","reject","profileReducer","state","action","newPost","filter","item","postId","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","selectedPage","pageSize","get","then","followUser","post","unfollowUser","delete","put","photo","formData","FormData","append","authAPI","authUser","logInUser","email","password","rememberMe","captcha","logOutUser","securityAPI","getCaptcha","dialogsData","name","messagesData","sendMessageActionCreator","messageText","dialogsReducer","newMessage","Navbar","sidebar","className","s","nav","to","activeClassName","activeLink","href","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","users","totalUsersCount","currentPage","isLoading","followingInProgress","followAC","unfollowAC","setUsersAC","setTotalUsersCountAC","isLoadingAC","toggleFollowingProgressAC","followUnfollow","apiMethod","actionCreator","usersReducer","followed","User","user","follow","unfollow","src","small","userPhoto","alt","loading","some","onClick","style","marginLeft","fontSize","userName","Users","onPageChanged","padding","current","onChange","total","key","getUsersList","usersPage","getTotalUsersCount","getPageSize","getCurrentPage","getFollowingInProgress","getIsLoading","UsersContainer","pageNumber","props","setCurrentPageAC","this","toggleFollowingProgress","display","justifyContent","height","alignItems","size","React","Component","connect","totalCount","Header","login","isAuth","header","logo","loginBlock","logout","captchaURL","setUserDataAC","setUserData","getCaptchaThunk","url","authReducer","HeaderContainer","LoginForm","handleSubmit","error","onSubmit","errorBlock","Field","width","component","Input","placeholder","validate","marginTop","flexDirection","marginRight","createField","background","border","cursor","reduxForm","form","textAlign","initialized","globalError","appReducer","friends","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","withLazySuspense","fallback","ProfileContainer","lazy","DialogsContainer","App","initializeApp","justify","xl","path","render","exact","AppContainer","withRouter","MainApp","ReactDOM","document","getElementById","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","validators","text"],"mappings":"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","file":"static/js/main.04dd077f.chunk.js","sourcesContent":["\r\nexport const required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Пустое поле'\r\n}\r\n\r\nexport const maxLength = (max) => (value) => {\r\n\r\n    if (value && value.length > max) {\r\n        return `Максимально ${max} символов`\r\n    }\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsBlock\":\"Friends_friendsBlock__2HedO\",\"friends\":\"Friends_friends__jx6Te\",\"friend\":\"Friends_friend__2Vm7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__2XG4Z\",\"userPhoto\":\"Users_userPhoto__x1tGy\",\"userName\":\"Users_userName__HjHRd\"};","module.exports = __webpack_public_path__ + \"static/media/ava.e4a4fd5a.jpg\";","import { profileAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst ADD_POST = 'profile/ADD_POST',\r\n    SET_USER_PROFILE = 'profile/SET_USER_PROFILE',\r\n    SET_USER_STATUS = 'profile/SET_USER_STATUS',\r\n    DELETE_POST = 'profile/DELETE_POST',\r\n    SAVE_PHOTO = 'profile/SAVE_PHOTO'\r\n\r\nconst initialState = {\r\n\r\n    postsData: [\r\n        { id: 1, message: 'Салют', likesCount: 10 },\r\n        { id: 2, message: 'Мой первый пост', likesCount: 15 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: 3,\r\n                message: action.postText,\r\n                likesCount: 5\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case SET_USER_STATUS:\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case DELETE_POST:\r\n\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter((item) => {\r\n                    return item.id !== action.postId\r\n                })\r\n            }\r\n\r\n        case SAVE_PHOTO:\r\n\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (postText) => {\r\n    return { type: ADD_POST, postText }\r\n}\r\n\r\nexport const setUserProfileAC = (profile) => {\r\n    return { type: SET_USER_PROFILE, profile }\r\n}\r\n\r\nexport const setUserStatusAC = (status) => {\r\n    return { type: SET_USER_STATUS, status }\r\n}\r\n\r\nexport const deletePostAC = (postId) => {\r\n    return { type: DELETE_POST, postId }\r\n}\r\n\r\nexport const savePhotoAC = (photos) => {\r\n    return { type: SAVE_PHOTO, photos }\r\n}\r\n\r\nexport const setUserProfile = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const res = await profileAPI.profileUser(userId)\r\n\r\n        dispatch(setUserProfileAC(res.data));\r\n\r\n    }\r\n}\r\n\r\nexport const setUserStatusThunk = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const res = await profileAPI.setUserStatus(userId)\r\n\r\n        dispatch(setUserStatusAC(res.data));\r\n    }\r\n}\r\n\r\nexport const updateUserStatusThunk = (status) => {\r\n    return async (dispatch) => {\r\n\r\n        const res = await profileAPI.updateUserStatus(status)\r\n\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setUserStatusAC(status));\r\n        }\r\n    }\r\n}\r\n\r\nexport const savePhotoThunk = (file) => {\r\n    return async (dispatch) => {\r\n\r\n        const res = await profileAPI.savePhoto(file)\r\n\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(savePhotoAC(res.data.data.photos));\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveProfileThunk = (profile) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const userId = getState().auth.id;\r\n\r\n        const res = await profileAPI.saveProfile(profile)\r\n\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setUserProfile(userId));\r\n        } else {\r\n            dispatch(stopSubmit(\"profile-edit\", { _error: res.data.messages[0] }))\r\n            return Promise.reject(res.data.messages[0]);\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import * as axios from 'axios';\r\n\r\n\r\nlet instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'b4f99289-4387-4890-a9a9-fbce3d7bca05'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(selectedPage = 1, pageSize = 5) {\r\n        return instance.get(`users/?page=${selectedPage}&count=${pageSize}`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    },\r\n\r\n    followUser(userId) {\r\n\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollowUser(userId) {\r\n\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    profileUser(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n\r\n    setUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n\r\n    savePhoto(photo) {\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n\r\n    saveProfile(profile) {\r\n\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    authUser() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    logInUser(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n\r\n    logOutUser() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}","const SEND_MESSAGE = 'dialogs/SEND_MESSAGE';\r\n\r\nconst initialState = {\r\n\r\n    dialogsData: [\r\n        { id: 1, name: 'Артем' },\r\n        { id: 2, name: 'Маша' },\r\n        { id: 3, name: 'Катя' }\r\n    ],\r\n    messagesData: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'Yo' },\r\n        { id: 3, message: 'Come on' }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            const newMessage = {\r\n                id: 4,\r\n                message: action.messageText,\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, newMessage]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (messageText) => {\r\n    return { type: SEND_MESSAGE, messageText }\r\n}\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/logo.8be16200.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__12rWZ\",\"item\":\"Navbar_item__2IXcX\",\"activeLink\":\"Navbar_activeLink__2apJJ\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friends from './Friends/Friends';\r\n\r\n\r\n\r\nconst Navbar = ({ sidebar }) => {\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Моя страница</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Сообщения</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Пользователи</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a href=\"#s\">Новости</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a href=\"#s\">Музыка</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a href=\"#s\">Настройки</a>\r\n        </div>\r\n\r\n        {/* <Friends friends={sidebar.friends} /> */}\r\n\r\n\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjectProps }\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'user/FOLLOW',\r\n    UNFOLLOW = 'user/UNFOLLOW',\r\n    SET_USERS = 'user/SET_USERS',\r\n    SET_CURRENT_PAGE = 'user/SET_CURRENT_PAGE',\r\n    SET_TOTAL_USERS_COUNT = 'user/SET_TOTAL_USERS_COUNT',\r\n    IS_LOADING = 'user/IS_LOADING',\r\n    TOGGLE_IS_FOLLOWING_PROGRESS = 'user/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isLoading: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        }\r\n        case IS_LOADING: {\r\n            return { ...state, isLoading: action.isLoading }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isLoading\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followAC = (userId) => {\r\n    return { type: FOLLOW, userId }\r\n}\r\n\r\nexport const unfollowAC = (userId) => {\r\n    return { type: UNFOLLOW, userId }\r\n}\r\n\r\nexport const setUsersAC = (users) => {\r\n    return { type: SET_USERS, users }\r\n}\r\n\r\nexport const setCurrentPageAC = (currentPage) => {\r\n    return { type: SET_CURRENT_PAGE, currentPage }\r\n}\r\n\r\nexport const setTotalUsersCountAC = (totalUsersCount) => {\r\n    return { type: SET_TOTAL_USERS_COUNT, totalUsersCount }\r\n}\r\n\r\nexport const isLoadingAC = (isLoading) => {\r\n    return { type: IS_LOADING, isLoading }\r\n}\r\n\r\nexport const toggleFollowingProgressAC = (isLoading, userId) => {\r\n    return { type: TOGGLE_IS_FOLLOWING_PROGRESS, isLoading, userId }\r\n}\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(isLoadingAC(true));\r\n\r\n        const data = await usersAPI.getUsers(currentPage, pageSize);\r\n\r\n        dispatch(isLoadingAC(false));\r\n        dispatch(setUsersAC(data.items));\r\n        dispatch(setTotalUsersCountAC(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgressAC(true, userId));\r\n\r\n    const response = await apiMethod;\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgressAC(false, userId));\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        const apiMethod = usersAPI.unfollowUser(userId);\r\n        followUnfollow(dispatch, userId, apiMethod, unfollowAC);\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        const apiMethod = usersAPI.followUser(userId);\r\n        followUnfollow(dispatch, userId, apiMethod, followAC);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../image/ava.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button } from 'antd';\r\n\r\nconst User = ({ user, followingInProgress, follow, unfollow }) => {\r\n\r\n  return (\r\n    <div className={s.user}>\r\n      <div>\r\n        <NavLink to={'/profile/' + user.id}>\r\n          <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n            className={s.userPhoto} alt=\"avatar\" />\r\n        </NavLink>\r\n\r\n        <p>\r\n          {user.followed\r\n\r\n            ? <Button type=\"primary\"\r\n              loading={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                unfollow(user.id)\r\n              }}>Отписаться</Button>\r\n\r\n            : <Button type=\"primary\"\r\n              loading={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                follow(user.id)\r\n              }}>Добавить</Button>}\r\n\r\n        </p>\r\n      </div>\r\n\r\n      <div style={{ marginLeft: 300, fontSize: 16 }}>\r\n        <NavLink to={'/profile/' + user.id}>\r\n          <p className={s.userName}>{user.name}</p>\r\n        </NavLink>\r\n        <p>{user.status}</p>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport { Pagination } from 'antd';\r\nimport User from './User';\r\n\r\nconst Users = ({ totalUsersCount, currentPage, users, followingInProgress, onPageChanged, follow, unfollow }) => {\r\n\r\n\r\n  return <div>\r\n    <div style={{ padding: 10 }}>\r\n      <Pagination current={currentPage}\r\n        onChange={onPageChanged}\r\n        total={totalUsersCount} />\r\n    </div>\r\n    {\r\n      users.map(user =>\r\n        <User user={user}\r\n          followingInProgress={followingInProgress}\r\n          follow={follow}\r\n          unfollow={unfollow}\r\n          key={user.id} />)\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default Users;","\r\nexport const getUsersList = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getIsLoading = (state) => {\r\n    return state.usersPage.isLoading\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPageAC,\r\n    setUsersAC,\r\n    setTotalUsersCountAC,\r\n    unfollow, toggleFollowingProgressAC, getUsers,\r\n} from '../../redux/usersReducer';\r\n\r\nimport Users from './Users';\r\n\r\nimport { Spin } from 'antd';\r\n\r\nimport { getUsersList, getTotalUsersCount, getPageSize, getFollowingInProgress, getCurrentPage, getIsLoading } from '../../redux/users-selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { currentPage, pageSize } = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const { pageSize } = this.props;\r\n\r\n        this.props.getUsers(pageNumber, pageSize);\r\n        this.props.setCurrentPageAC(pageNumber);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { users, totalUsersCount, pageSize, currentPage, followingInProgress, isLoading, follow, unfollow, toggleFollowingProgress } = this.props\r\n\r\n        if (isLoading) {\r\n            return <Spin style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                height: 300,\r\n                alignItems: 'center'\r\n            }} size=\"large\" />\r\n        }\r\n\r\n        return (\r\n            <Users\r\n                users={users}\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                followingInProgress={followingInProgress}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={follow}\r\n                unfollow={unfollow}\r\n                toggleFollowingProgress={toggleFollowingProgress}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersList(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isLoading: getIsLoading(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        follow, unfollow, setUsersAC,\r\n        setCurrentPageAC, setTotalUsersCountAC, toggleFollowingProgressAC, getUsers\r\n\r\n    })(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport logo from '../../image/logo.png';\r\n\r\nconst Header = ({ auth, logOutUser }) => {\r\n\r\n    const { login, isAuth } = auth;\r\n\r\n    return <header className={s.header}>\r\n        <img src={logo} alt=\"logo\" />\r\n\r\n\r\n        <div className={s.loginBlock}>\r\n            {isAuth\r\n                ? <div>\r\n                    <span className={s.userName}>{login} </span>\r\n                    <span>||</span>\r\n                    <span className={s.logout} onClick={logOutUser}> Log out</span>\r\n                </div>\r\n\r\n                : <NavLink to={'/login'}>\r\n                    Login\r\n                  </NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { authAPI, securityAPI } from \"../api/api\";\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA',\r\n    GET_CAPTCHA = 'auth/GET_CAPTCHA';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaURL: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case GET_CAPTCHA:\r\n\r\n            return {\r\n                ...state,\r\n                captchaURL: action.captcha\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setUserDataAC = (id, login, email, isAuth) => {\r\n    return { type: SET_USER_DATA, data: { id, login, email, isAuth } }\r\n}\r\n\r\nexport const setCaptchaAC = (captcha) => {\r\n    return { type: GET_CAPTCHA, captcha }\r\n}\r\n\r\nexport const setUserData = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const res = await authAPI.authUser()\r\n\r\n        if (res.data.resultCode === 0) {\r\n\r\n            const { id, login, email } = res.data.data;\r\n            dispatch(setUserDataAC(id, login, email, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logInUser = (email, password, rememberMe, captcha) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const res = await authAPI.logInUser(email, password, rememberMe, captcha)\r\n\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setUserData());\r\n        } else {\r\n\r\n            if (res.data.resultCode === 10) {\r\n                dispatch(getCaptchaThunk());\r\n            }\r\n\r\n            const message = res.data.messages.length > 0\r\n                ? res.data.messages[0]\r\n                : \"Ooops, some error\"\r\n\r\n            dispatch(stopSubmit(\"login\", { _error: message }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logOutUser = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const res = await authAPI.logOutUser()\r\n\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setUserDataAC(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptchaThunk = () => {\r\n\r\n    return async (dispatch) => {\r\n        const res = await securityAPI.getCaptcha();\r\n        const captchaURL = res.data.url;\r\n\r\n        dispatch(setCaptchaAC(captchaURL));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logOutUser } from '../../redux/authReducer';\r\n\r\n\r\nclass HeaderContainer extends Component {\r\n\r\n    render() {\r\n        return <Header auth={this.props.auth}\r\n            logOutUser={this.props.logOutUser} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { logOutUser })(HeaderContainer);","import React from 'react';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { createField, Input } from '../../common/FormsControls/FormsControls';\r\nimport { required } from '../../../utils/validators/validators';\r\n\r\nimport s from '../../../components/common/FormsControls/FormsControls.module.css';\r\n\r\n\r\nlet LoginForm = ({ handleSubmit, error, captcha }) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {error &&\r\n                <div className={s.errorBlock}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <span>\r\n                <Field style={{ width: 200 }} name='email' component={Input}\r\n                    placeholder={'Login'} validate={required} />\r\n            </span>\r\n            <span>\r\n                <Field style={{\r\n                    width: 200,\r\n                    marginTop: 10\r\n                }} name='password' component={Input}\r\n                    placeholder='Password' validate={required}\r\n                    type='password' />\r\n            </span>\r\n            <div>\r\n                <label style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'flex-start',\r\n                    alignItems: 'flex-start',\r\n                    marginTop: 7\r\n                }}>\r\n                    <Field style={{ marginRight: 5 }} name='rememberMe' component={Input} type='checkbox' /> remember me\r\n                </label>\r\n            </div>\r\n\r\n            {captcha && <img src={captcha} alt=\"captcha\" />}\r\n\r\n            {captcha && createField(\"Symbols from image\", \"captcha\", [required], Input)}\r\n\r\n            <button style={{\r\n                padding: '3px 30px',\r\n                background: 'white',\r\n                border: '1px solid gray',\r\n                cursor: 'pointer',\r\n                marginTop: 7\r\n            }}>Войти\r\n            </button>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default LoginForm = reduxForm({ form: 'login' })(LoginForm)\r\n","import React from 'react';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport { logInUser } from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = ({ logInUser, isAuth, captchaURL }) => {\r\n\r\n    const onSubmit = ({ email, password, rememberMe, captcha }) => {\r\n        logInUser(email, password, rememberMe, captcha);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            padding: '20px 0',\r\n            textAlign: 'center'\r\n        }}>\r\n            <div>\r\n                <h1>Please sign in</h1>\r\n\r\n                <LoginForm onSubmit={onSubmit}\r\n                    captcha={captchaURL} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaURL: state.auth.captchaURL\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { logInUser })(Login);\r\n\r\n","import { setUserData } from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'app/SET_INITIALIZED';\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n    globalError: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setInitializedAC = () => {\r\n    return { type: SET_INITIALIZED }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        let promise = dispatch(setUserData());\r\n\r\n        promise.then(() => {\r\n            dispatch(setInitializedAC());\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;","\r\nconst initialState = {\r\n\r\n    friends: [\r\n        { id: 1, photo: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSLdL6lKDCM-MaoUFy-2Jbnz2IXxYtY7FpLKHf_aB-TUFZDlMJr', name: 'Артем' },\r\n        { id: 2, photo: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSLdL6lKDCM-MaoUFy-2Jbnz2IXxYtY7FpLKHf_aB-TUFZDlMJr', name: 'Маша' },\r\n        { id: 3, photo: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSLdL6lKDCM-MaoUFy-2Jbnz2IXxYtY7FpLKHf_aB-TUFZDlMJr', name: 'Катя' }\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n}\r\n);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunk)));\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nexport const withLazySuspense = (Component) => {\r\n\r\n    return (props) => {\r\n\r\n        return (\r\n            <Suspense fallback={<Spin size='large' />}>\r\n                <Component {...props} />\r\n            </Suspense>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter, Switch, BrowserRouter, Redirect, HashRouter } from 'react-router-dom';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/appReducer';\r\nimport { compose } from 'redux';\r\nimport { Spin, Row, Col } from 'antd';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from 'react-redux';\r\nimport { withLazySuspense } from './hoc/withLazySuspense';\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) {\r\n      return <Spin style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh'\r\n      }} size='large' />\r\n    }\r\n\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <Row>\r\n          <Col>\r\n            <HeaderContainer />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify=\"center\">\r\n          <Col xl={3}>\r\n            <Navbar />\r\n          </Col>\r\n\r\n          <Col xl={16}>\r\n            <div className=\"app-wrapper-content\">\r\n              <Switch>\r\n\r\n                <Route path='/profile/:userId?' render={withLazySuspense(ProfileContainer)}\r\n                />\r\n\r\n                <Route path='/dialogs' render={withLazySuspense(DialogsContainer)}\r\n                />\r\n\r\n                <Route path='/users' render={() =>\r\n                  <UsersContainer />}\r\n                />\r\n\r\n                <Route path='/login' render={() =>\r\n                  <Login />}\r\n                />\r\n\r\n                <Route exact path='/'\r\n                  render={() => <Redirect to='/profile' />} />\r\n\r\n                <Route path='*' render={() =>\r\n                  <div style={{\r\n                    height: 190,\r\n                    display: 'flex',\r\n                    fontSize: 26,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center'\r\n                  }\r\n                  }>Страница не найдена =(</div>} />\r\n\r\n              </Switch>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialized: state.app.initialized\r\n  }\r\n}\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst MainApp = (props) => {\r\n  return <HashRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </HashRouter>\r\n}\r\nexport default MainApp;  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MainApp from './App';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <MainApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport s from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\n\r\n\r\nexport const FormControl = ({ input, meta: { touched, error }, children, ...restProps }) => {\r\n\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError && s.error)}>\r\n\r\n            {children}\r\n\r\n            {hasError && <span>{error}</span>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport const Textarea = (props) => {\r\n\r\n    const { input, meta, ...restProps } = props;\r\n\r\n    return <FormControl {...props}>\r\n\r\n        <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n\r\n    const { input, ...restProps } = props;\r\n\r\n    return <FormControl {...props}>\r\n\r\n        <input {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n\r\n    return <span>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props} /> {text}\r\n    </span>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__EnI5u\",\"error\":\"FormsControls_error__bPcwt\",\"errorBlock\":\"FormsControls_errorBlock__n2ibu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__7Fiq4\",\"loginBlock\":\"Header_loginBlock__2tf97\",\"userName\":\"Header_userName__n-GM1\",\"logout\":\"Header_logout__8ARQ0\"};"],"sourceRoot":""}