{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Message/AddNewMessageForm/AddNewMessageForm.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","name","path","id","className","s","dialog","active","to","activeClassName","Message","message","maxLength50","maxLength","AddNewMessageForm","props","onSubmit","handleSubmit","Field","style","width","placeholder","component","Textarea","validate","required","padding","background","border","cursor","reduxForm","form","Dialogs","dialogsPage","sendMessage","dialogsData","messagesData","dialogItems","map","item","key","messages","dialogs","dialogsItems","values","newMessageText","mapStateToProps","state","isAuth","auth","compose","connect","dispatch","messageText","sendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCmBpMC,EAfI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAEZC,EAAO,YAFoB,EAATC,GAIxB,OAEI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAE/B,kBAAC,IAAD,CAASC,GAAIN,EAAMO,gBAAiBJ,IAAEE,QACjCN,KCJFS,EAPC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEf,OACI,yBAAKP,UAAWC,IAAEM,SAAUA,I,mCCA9BC,EAAcC,YAAU,IAE1BC,EAAoB,SAACC,GAErB,OACI,0BAAMC,SAAUD,EAAME,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,KACnBC,YAAY,mIACZC,UAAWC,IACXtB,KAAK,iBACLuB,SAAU,CAACC,IAAUb,MAG7B,4BAAQO,MAAO,CACXO,QAAS,WACTC,WAAY,QACZC,OAAQ,iBACRC,OAAQ,YAJZ,4DAWGf,IAAoBgB,YAAU,CAAEC,KAAM,qBAAlBD,CAAyChB,GCsB7DkB,EA7CC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAEpBC,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,aAGfC,EAAcF,EAAYG,KAAI,SAACC,GAAU,IAEnCpC,EAAaoC,EAAbpC,GAAIF,EAASsC,EAATtC,KAEZ,OAAO,kBAAC,EAAD,CAAYuC,IAAKrC,EACpBF,KAAMA,EACNE,GAAIA,OAGNsC,EAAWL,EAAaE,KAAI,SAACC,GAAU,IAEjCpC,EAAgBoC,EAAhBpC,GAAIQ,EAAY4B,EAAZ5B,QAEZ,OAAO,kBAAC,EAAD,CAAS6B,IAAKrC,EACjBQ,QAASA,EACTR,GAAIA,OAOZ,OACI,yBAAKC,UAAWC,IAAEqC,SACd,yBAAKtC,UAAWC,IAAEsC,cAEbN,GAGL,yBAAKjC,UAAWC,IAAEoC,UACd,6BACKA,GAGL,kBAAC,EAAD,CAAmBzB,SAhBT,SAAC4B,GACnBV,EAAYU,EAAOC,sB,yDC3BrBC,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,OCcZE,sBACXC,aAhBoB,SAACJ,GACrB,MAAO,CACHd,YAAac,EAAMd,gBAIA,SAACmB,GACxB,MAAO,CACHlB,YAAa,SAACmB,GACVD,EAASE,YAAyBD,UDJd,SAACE,GAAe,IAEtCC,EAFqC,uKAKnC,OAAIC,KAAK1C,MAAMiC,OACJ,kBAACO,EAAcE,KAAK1C,OAExB,kBAAC,IAAD,CAAUP,GAAG,eARe,GAEXkD,IAAMH,WAYtC,OAF8BJ,YAAQL,EAARK,CAAyBK,KCF5CN,CAGblB","file":"static/js/4.60ecd56d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__SKIsd\",\"dialogsItems\":\"Dialogs_dialogsItems__OAADq\",\"dialog\":\"Dialogs_dialog__2WYPS\",\"active\":\"Dialogs_active__3AQor\",\"messages\":\"Dialogs_messages__hsg4q\",\"message\":\"Dialogs_message__1JV07\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = ({ name, id }) => {\r\n\r\n    const path = '/dialogs/' + id;\r\n\r\n    return (\r\n\r\n        <div className={s.dialog + ' ' + s.active}>\r\n\r\n            <NavLink to={path} activeClassName={s.active}>\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst Message = ({ message }) => {\r\n\r\n    return (\r\n        <div className={s.message}>{message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport { required, maxLength } from '../../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength50 = maxLength(50);\r\n\r\nlet AddNewMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field style={{ width: 200 }}\r\n                    placeholder=\"Введите текст сообщения\"\r\n                    component={Textarea}\r\n                    name=\"newMessageText\"\r\n                    validate={[required, maxLength50]} />\r\n            </div>\r\n\r\n            <button style={{\r\n                padding: '3px 20px',\r\n                background: 'white',\r\n                border: '1px solid gray',\r\n                cursor: 'pointer'\r\n            }}>Отправить\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddNewMessageForm = reduxForm({ form: 'addNewMessageForm' })(AddNewMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\n\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nimport AddNewMessageForm from './Message/AddNewMessageForm/AddNewMessageForm';\r\n\r\nconst Dialogs = ({ dialogsPage, sendMessage }) => {\r\n\r\n    const { dialogsData, messagesData } = dialogsPage;\r\n\r\n\r\n    const dialogItems = dialogsData.map((item) => {\r\n\r\n        const { id, name } = item;\r\n\r\n        return <DialogItem key={id}\r\n            name={name}\r\n            id={id} />\r\n    });\r\n\r\n    const messages = messagesData.map((item) => {\r\n\r\n        const { id, message } = item;\r\n\r\n        return <Message key={id}\r\n            message={message}\r\n            id={id} />\r\n    });\r\n\r\n    const onSendMessage = (values) => {\r\n        sendMessage(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {dialogItems}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {messages}\r\n                </div>\r\n\r\n                <AddNewMessageForm onSubmit={onSendMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n\r\n            if (this.props.isAuth) {\r\n                return <Component {...this.props} />\r\n            }\r\n            return <Redirect to='/login' />\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirect;\r\n}","import Dialogs from './Dialogs';\r\nimport { sendMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (messageText) => {\r\n            dispatch(sendMessageActionCreator(messageText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}